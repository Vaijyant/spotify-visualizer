{"version":3,"sources":["constants.js","Login.js","TrackSearchResult.js","Player.js","never.mp3","Visualizer.js","Dashboard.js","useAuth.js","App.js","index.js"],"names":["CLIENT_ID","BFF_URI","Login","authUrl","Constants","encodeURIComponent","Container","className","style","minHeight","href","TrackSearchResult","track","chooseTrack","cursor","onClick","src","albumUrl","alt","height","width","title","artist","Player","accessToken","trackUri","useState","play","setPlay","useEffect","showSaveIcon","token","callback","state","isPlaying","uris","Visualizer","audioAnalysis","audioData","setAudioData","visualizer","setVisualizer","visualizerType","setVisualizerType","console","log","animator","analyser","canvas","ctx","visualizerStyle","animate","bufferLength","frequencyBinCount","dataArray","Uint8Array","barWidth","clearRect","getByteFrequencyData","barHeight","requestAnimationFrame","visualizeSymBars","x","i","gradient","createLinearGradient","addColorStop","fillStyle","fillRect","canvasRef","useRef","current","filter","canvasContext","getContext","audio","Audio","audioContext","AudioContext","audioSource","createMediaElementSource","audioAnalyser","createAnalyser","connect","destination","fftSize","backgroundColor","opening","ref","spotifyApi","SpotifyWebApi","clientId","Dashboard","code","setAccessToken","refreshToken","setRefreshToken","expiresIn","setExpiresIn","axios","post","then","res","data","window","history","pushState","catch","location","interval","setInterval","clearInterval","useAuth","search","setSearch","serachResults","setSearchResults","playingTrack","setPlayingTrack","setAudioAnalysis","getAudioAnalysisForTrack","id","cancel","searchTracks","body","tracks","items","map","smalestAlbumImage","album","images","reduce","smallest","image","artists","name","uri","url","Form","Control","type","placeholder","value","onChange","e","target","overflowY","length","URLSearchParams","get","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.aac1f48c.chunk.js","sourcesContent":["export const BASE_URL = 'https://api.spotify.com';\r\nexport const AUTH_URL = 'https://accounts.spotify.com/authorize';\r\n\r\n\r\nexport const CLIENT_ID = '3161af22a7714180bef6dbfe9a6fec9f';\r\nexport const CLIENT_SECRETE = '';\r\nexport const REDIRECT_URI = 'http://localhost:3000';\r\nexport const BFF_URI = 'http://localhost:3001';\r\nexport const SCOPE = 'streaming user-read-email user-read-private user-read-email user-library-read user-library-modify user-read-playback-state user-modify-playback-state user-read-currently-playing'","import React from 'react'\r\nimport { Container } from 'react-bootstrap'\r\nimport * as Constants from './constants'\r\n\r\nexport default function Login() {\r\n    let authUrl = Constants.AUTH_URL + '?client_id=' +   Constants.CLIENT_ID \r\n    + '&response_type=code&redirect_uri=' + Constants.REDIRECT_URI \r\n    + '&scope=' + encodeURIComponent(Constants.SCOPE)\r\n    return (\r\n       <Container className=\"d-flex justify-content-center align-items-center\"\r\n       style={{ minHeight: \"100vh\"}}>\r\n           <a className=\"btn btn-success btn-lg\" href={authUrl}>Login with Spotify</a>\r\n       </Container>\r\n    )\r\n}","import React from \"react\"\r\n\r\nexport default function TrackSearchResult({track, chooseTrack}) {\r\n    function handlePlay() {\r\n        chooseTrack(track)\r\n    }\r\n    return <div\r\n            className=\"d-flex m-2 align-items-center\"\r\n            style={{cursor: \"pointer\"}}\r\n            onClick={handlePlay}>\r\n        <img src={track.albumUrl} alt=\"-_-\" style={{height: '64px', width: '64px'}} />\r\n        <div className=\"ml-3\">\r\n            <div>{track.title}</div>\r\n            <div className=\"text-muted\">{track.artist}</div>\r\n        </div>\r\n    </div>\r\n}","import { useState, useEffect } from \"react\"\r\nimport SpotifyPlayer from \"react-spotify-web-playback\"\r\n\r\nexport default function Player({ accessToken, trackUri }) {\r\n    const [play, setPlay] = useState(false)\r\n\r\n    useEffect(() => setPlay(true), [trackUri])\r\n\r\n    if (!accessToken) return null\r\n    return <SpotifyPlayer\r\n        showSaveIcon='true'\r\n        token={accessToken}\r\n        callback={state => {\r\n            if (!state.isPlaying) setPlay(false)\r\n        }}\r\n        play={play}\r\n        uris={trackUri ? [trackUri] : []}\r\n    />\r\n}","export default __webpack_public_path__ + \"static/media/never.202587c7.mp3\";","import React, { useRef, useEffect, useState } from 'react'\r\nimport opening from './never.mp3'\r\n\r\nexport default function Visualizer({ audioAnalysis }) {\r\n\r\n    const [audioData, setAudioData] = useState();\r\n    const [visualizer, setVisualizer] = useState();\r\n    const [visualizerType, setVisualizerType] = useState();\r\n\r\n    console.log(audioAnalysis);\r\n\r\n\r\n    let animator = (analyser, canvas, ctx, visualizerStyle) => {\r\n\r\n        function animate() {\r\n            const bufferLength = analyser.frequencyBinCount;\r\n            const dataArray = new Uint8Array(bufferLength);\r\n\r\n\r\n            const barWidth = canvas.width / (bufferLength);\r\n            let barHeight;\r\n\r\n            ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n            analyser.getByteFrequencyData(dataArray);\r\n\r\n            let x = 0;\r\n            visualizerStyle(canvas, ctx, x, bufferLength, barHeight, barWidth, dataArray)\r\n            requestAnimationFrame(animate);\r\n        }\r\n\r\n        animate();\r\n\r\n\r\n    }\r\n\r\n    let visualizeBars = (canvas, ctx, x, bufferLength, barHeight, barWidth, dataArray) => {\r\n        for (let i = 0; i < bufferLength; i++) {\r\n            barHeight = dataArray[i] * 2;\r\n            const red = i * barHeight / 20;\r\n            const green = i * 4;\r\n            const blue = barHeight / 2;\r\n            ctx.fillStyle = 'rgb(' + red + ', ' + green + ', ' + blue + ')';\r\n            ctx.fillRect(x, canvas.height - barHeight, barWidth, barHeight);\r\n            x += barWidth;\r\n        }\r\n    }\r\n\r\n\r\n    let visualizeSymBars = (canvas, ctx, x, bufferLength, barHeight, barWidth, dataArray) => {\r\n\r\n        for (let i = 0; i < bufferLength / 2; i++) {\r\n            barHeight = dataArray[i] * 2.5;\r\n            let gradient = ctx.createLinearGradient(0, canvas.height - barHeight, 0, canvas.height);\r\n            gradient.addColorStop(0, 'red');\r\n            gradient.addColorStop(1 / 2, 'orange');\r\n            gradient.addColorStop(1, 'yellow');\r\n            ctx.fillStyle = gradient;\r\n            ctx.fillRect(canvas.width / 2 - x, canvas.height - barHeight, barWidth, barHeight);\r\n            x += barWidth;\r\n\r\n        }\r\n        for (let i = 0; i < bufferLength / 2; i++) {\r\n            barHeight = dataArray[i] * 2.5;\r\n            let gradient = ctx.createLinearGradient(0, canvas.height - barHeight, 0, canvas.height);\r\n            gradient.addColorStop(0, 'red');\r\n            gradient.addColorStop(1 / 2, 'orange');\r\n            gradient.addColorStop(1, 'yellow');\r\n            ctx.fillStyle = gradient;\r\n            ctx.fillRect(x, canvas.height - barHeight, barWidth, barHeight);\r\n            x += barWidth;\r\n\r\n        }\r\n    }\r\n\r\n\r\n    const canvasRef = useRef(null)\r\n    useEffect(() => {\r\n        if (!audioData || !visualizer || !visualizerType) return;\r\n\r\n        let canvas = canvasRef.current;\r\n        canvas.filter = 'blur(100px) contrast(10)';\r\n        let canvasContext = canvas.getContext('2d');\r\n\r\n\r\n        let audio = new Audio();\r\n        audio.src = audioData;\r\n        audio.play();\r\n\r\n\r\n        let audioContext = new AudioContext();\r\n        let audioSource = audioContext.createMediaElementSource(audio);\r\n\r\n        let audioAnalyser = audioContext.createAnalyser();\r\n        audioSource.connect(audioAnalyser);\r\n        audioAnalyser.connect(audioContext.destination);\r\n        audioAnalyser.fftSize = 2048;\r\n\r\n        visualizer(audioAnalyser, canvas, canvasContext, visualizerType)\r\n\r\n    }, [audioData, visualizer, visualizerType])\r\n\r\n\r\n    function playSound() {\r\n        setAudioData(opening);\r\n        setVisualizer(() => animator);\r\n        setVisualizerType(() => visualizeSymBars)\r\n    }\r\n\r\n\r\n    return <div style={{ backgroundColor: \"black\", height: \"100%\" }} onClick={playSound}>\r\n        <canvas ref={canvasRef} style={{ backgroundColor: \"black\" }} width=\"1920px\" height=\"889px\"></canvas>\r\n    </div>\r\n}","import { useState, useEffect } from 'react'\r\nimport useAuth from './useAuth'\r\nimport { Form } from 'react-bootstrap'\r\nimport SpotifyWebApi from 'spotify-web-api-node'\r\nimport TrackSearchResult from './TrackSearchResult'\r\nimport Player from './Player'\r\nimport Visualizer2 from './Visualizer2'\r\nimport Visualizer from './Visualizer'\r\nimport { CLIENT_ID } from './constants'\r\n\r\nconst spotifyApi = new SpotifyWebApi({\r\n    clientId: CLIENT_ID\r\n})\r\n\r\nexport default function Dashboard({ code }) {\r\n    const accessToken = useAuth(code)\r\n    const [search, setSearch] = useState(\"\")\r\n    const [serachResults, setSearchResults] = useState([])\r\n    const [playingTrack, setPlayingTrack] = useState()\r\n    const [audioAnalysis, setAudioAnalysis] = useState({})\r\n\r\n    function chooseTrack(track) {\r\n        setPlayingTrack(track)\r\n        setSearch(\"\")\r\n        setAudioAnalysis({})\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (!playingTrack) return\r\n        spotifyApi.getAudioAnalysisForTrack(playingTrack.id).then(res => {\r\n            setAudioAnalysis(res);\r\n        });\r\n    }, [playingTrack]);\r\n\r\n    useEffect(() => {\r\n        if (!accessToken) return\r\n        spotifyApi.setAccessToken(accessToken)\r\n    }, [accessToken])\r\n\r\n\r\n    useEffect(() => {\r\n        if (!search) return setSearchResults([])\r\n        if (!accessToken) return\r\n\r\n        let cancel = false\r\n\r\n        spotifyApi.searchTracks(search).then(res => {\r\n            if (cancel) return\r\n            setSearchResults(\r\n                res.body.tracks.items.map(track => {\r\n                    const smalestAlbumImage = track.album.images.reduce((smallest, image) => {\r\n                        if (image.height < smallest.height) return image\r\n                        return smallest\r\n                    }, track.album.images[0])\r\n\r\n                    return {\r\n                        artist: track.artists[0].name,\r\n                        title: track.name,\r\n                        uri: track.uri,\r\n                        id: track.id,\r\n                        albumUrl: smalestAlbumImage.url\r\n                    }\r\n                }))\r\n        })\r\n\r\n        return () => cancel = true\r\n    }, [search, accessToken])\r\n\r\n    return (\r\n        <div className=\"d-flex flex-column\" style={{ height: \"100vh\"}}>\r\n            <Form.Control\r\n                type=\"search\"\r\n                placeholder=\"Search Songs/Artists\"\r\n                value={search}\r\n                onChange={e => setSearch(e.target.value)}\r\n            />\r\n            <div className=\"flex-grow-1\" style={{ overflowY: \"auto\" }}>\r\n                {serachResults.map(track => (\r\n                    <TrackSearchResult track={track} key={track.uri} chooseTrack={chooseTrack} />\r\n                ))}\r\n                {serachResults.length === 0 && (<div style={{ height: \"100%\" }}><Visualizer audioAnalysis={audioAnalysis} /></div>)}\r\n            </div>\r\n            <div><Player accessToken={accessToken} trackUri={playingTrack?.uri} /></div>\r\n        </div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    )\r\n}","import { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\nimport * as Constants from './constants'\r\n\r\nexport default function useAuth(code) {\r\n    const [accessToken, setAccessToken] = useState()\r\n    const [refreshToken, setRefreshToken] = useState()\r\n    const [expiresIn, setExpiresIn] = useState()\r\n\r\n    useEffect(() => {\r\n        axios\r\n            .post(Constants.BFF_URI + '/auth-token', {\r\n                code\r\n            })\r\n            .then(res => {\r\n                setAccessToken(res.data.accessToken)\r\n                setRefreshToken(res.data.refreshToken)\r\n                setExpiresIn(res.data.expiresIn)\r\n                window.history.pushState({}, null, \"/\")\r\n            })\r\n            .catch(() => {\r\n                window.location = '/'\r\n            })\r\n    }, [code])\r\n\r\n    useEffect(() => {\r\n        if (!refreshToken || !expiresIn) return\r\n        const interval = setInterval(() => {\r\n            axios\r\n                .post(Constants.BFF_URI + '/refresh-authtoken', {\r\n                    refreshToken\r\n                })\r\n                .then(res => {\r\n                    setAccessToken(res.data.accessToken)\r\n                    setExpiresIn(res.data.expiresIn)\r\n                })\r\n                .catch(() => {\r\n                    window.location = '/'\r\n                })\r\n        }, (expiresIn - 60) * 1000)\r\n        return () => clearInterval(interval)\r\n    }, [refreshToken, expiresIn])\r\n\r\n    return accessToken;\r\n}\r\n\r\n","import 'bootstrap/dist/css/bootstrap.min.css';\nimport Login from './Login'\nimport Dashboard from './Dashboard'\n\nconst code = new URLSearchParams(window.location.search).get('code');\n\nfunction App() {\n  return code ? <Dashboard code={code} /> : <Login />;\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}